[
    {
        "fileName": "src/Spryker/Client/Oauth/Dependency/Client/OauthToZedRequestClientBridge.php",
        "description": "Bridges: Type should be defined for param `url` in method `Spryker\\Client\\Oauth\\Dependency\\Client\\OauthToZedRequestClientBridge::call()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/Oauth/ResourceServer/Repository/AccessTokenRepository.php",
        "description": "Method `Spryker\\Client\\Oauth\\ResourceServer\\Repository\\AccessTokenRepository::getNewToken()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Client/Oauth/ResourceServer/Repository/AccessTokenRepository.php",
        "description": "Method `Spryker\\Client\\Oauth\\ResourceServer\\Repository\\AccessTokenRepository::isAccessTokenRevoked()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Client/Oauth/ResourceServer/ResourceServer.php",
        "description": "Method `Spryker\\Client\\Oauth\\ResourceServer\\ResourceServer::validateAuthenticatedRequest()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Service/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `jsonValue` in method `Spryker\\Service\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Service/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `assoc` in method `Spryker\\Service\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Service/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `depth` in method `Spryker\\Service\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Service/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `options` in method `Spryker\\Service\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Service/Oauth/Dependency/Service/OauthToUtilEncodingServiceInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `decodeJson()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Grant/PasswordGrantType.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Grant\\PasswordGrantType::respondToAccessTokenRequest()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Grant/PasswordGrantType.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Grant\\PasswordGrantType::getIdentifier()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Grant/RefreshTokenGrantType.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Grant\\RefreshTokenGrantType::respondToAccessTokenRequest()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Grant/RefreshTokenGrantType.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Grant\\RefreshTokenGrantType::getIdentifier()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Repositories/AccessTokenRepository.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Repositories\\AccessTokenRepository::getNewToken()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Repositories/AccessTokenRepository.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Repositories\\AccessTokenRepository::isAccessTokenRevoked()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Repositories/ClientRepository.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Repositories\\ClientRepository::getClientEntity()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Repositories/ClientRepository.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Repositories\\ClientRepository::validateClient()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Repositories/RefreshTokenRepository.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Repositories\\RefreshTokenRepository::getNewRefreshToken()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Repositories/RefreshTokenRepository.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Repositories\\RefreshTokenRepository::isRefreshTokenRevoked()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Repositories/ScopeRepository.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Repositories\\ScopeRepository::getScopeEntityByIdentifier()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Repositories/ScopeRepository.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Repositories\\ScopeRepository::finalizeScopes()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Business/Model/League/Repositories/UserRepository.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Business\\Model\\League\\Repositories\\UserRepository::getUserEntityByUserCredentials()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Communication/Console/OauthTokenConsole.php",
        "description": "Method `Spryker\\Zed\\Oauth\\Communication\\Console\\OauthTokenConsole::execute()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `value` in method `Spryker\\Zed\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::encodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `options` in method `Spryker\\Zed\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::encodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `depth` in method `Spryker\\Zed\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::encodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `jsonValue` in method `Spryker\\Zed\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `assoc` in method `Spryker\\Zed\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `depth` in method `Spryker\\Zed\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Dependency/Service/OauthToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `options` in method `Spryker\\Zed\\Oauth\\Dependency\\Service\\OauthToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Dependency/Service/OauthToUtilEncodingServiceInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `encodeJson()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Oauth/Dependency/Service/OauthToUtilEncodingServiceInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `decodeJson()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
